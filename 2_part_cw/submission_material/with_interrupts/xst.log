Release 14.1 - xst P.15xf (lin)
Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
--> 
Parameter TMPDIR set to tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.09 secs
 
--> 
Parameter xsthdpdir set to tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.09 secs
 
--> 
WARNING:Xst:1583 - You are using an internal switch '-infer_ramb8'.

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "tmp/top_level.prj"

---- Target Parameters
Output File Name                   : "top_level"
Target Device                      : xc6slx16-csg324-3

---- Source Options
Top Module Name                    : top_level

---- General Options
Library Search Order               : tmp/top_level.lso
Optimization Goal                  : speed
Optimization Effort                : 1

---- Other Options
infer_ramb8                        : No

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Parsing VHDL file "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/std_logic_textio.vhd" into library work
Parsing package <STD_LOGIC_TEXTIO>.
Parsing package body <STD_LOGIC_TEXTIO>.
Parsing VHDL file "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/util.vhd" into library work
Parsing package <util>.
Parsing package body <util>.
Parsing VHDL file "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/ram.vhd" into library work
Parsing entity <ram>.
Parsing architecture <syn> of entity <ram>.
Parsing VHDL file "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/reset.vhd" into library work
Parsing entity <reset>.
Parsing architecture <rtl> of entity <reset>.
Parsing VHDL file "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/rom.vhd" into library work
Parsing entity <rom>.
Parsing architecture <syn> of entity <rom>.
Parsing VHDL file "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/timer.vhd" into library work
Parsing entity <timer>.
Parsing architecture <rtl> of entity <timer>.
Parsing VHDL file "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" into library work
Parsing entity <trigger>.
Parsing architecture <rtl> of entity <trigger>.
Parsing VHDL file "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" into library work
Parsing entity <execution_unit>.
Parsing architecture <syn> of entity <execution_unit>.
Parsing VHDL file "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" into library work
Parsing entity <top_level>.
Parsing architecture <behav> of entity <top_level>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating entity <top_level> (architecture <behav>) with generics from library <work>.

Elaborating entity <reset> (architecture <rtl>) with generics from library <work>.

Elaborating entity <trigger> (architecture <rtl>) with generics from library <work>.
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected

Elaborating entity <timer> (architecture <rtl>) with generics from library <work>.

Elaborating entity <trigger> (architecture <rtl>) with generics from library <work>.
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd" Line 119. Case statement is complete. others clause is never selected

Elaborating entity <ram> (architecture <syn>) with generics from library <work>.

Elaborating entity <rom> (architecture <syn>) with generics from library <work>.

Elaborating entity <execution_unit> (architecture <syn>) with generics from library <work>.
WARNING:HDLCompiler:871 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 69: Using initial value "001000" for start_of_rom since it is never assigned
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 173: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 175: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 193: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 205: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 217: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 229: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 241: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 253: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 265: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 277: intr should be on the sensitivity list of the process
WARNING:HDLCompiler:1127 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd" Line 160: Assignment to blah ignored, since the identifier is never used
WARNING:HDLCompiler:634 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" Line 88: Net <eu_intr[7]> does not have a driver.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <top_level>.
    Related source file is "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd".
        clk_freq = 100000000
        debounce = 10000
        baud_rate = 57600
        timer_intr = 500000
        timer_rst = 10
        ts_digits = 13
        fifo_size = 16
        word_size = 32
        rom_size = 64
        rom_file = "rom.dat"
        ram_size = 128
        ram_file = "ram.dat"
        intr_size = 8
        ports_in = 2
        ports_out = 1
INFO:Xst:3210 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" line 109: Output port <eo> of the instance <reset_debounce_unit> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" line 109: Output port <ro> of the instance <reset_debounce_unit> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" line 109: Output port <fo> of the instance <reset_debounce_unit> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" line 109: Output port <wo> of the instance <reset_debounce_unit> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" line 144: Output port <eo> of the instance <debounce_unit> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" line 144: Output port <ro> of the instance <debounce_unit> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" line 144: Output port <fo> of the instance <debounce_unit> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/top_level.vhd" line 144: Output port <wo> of the instance <debounce_unit> is unconnected or connected to loadless signal.
WARNING:Xst:2935 - Signal 'eu_intr<7:1>', unconnected in block 'top_level', is tied to its initial value (0000000).
    Summary:
	no macro.
Unit <top_level> synthesized.

Synthesizing Unit <reset>.
    Related source file is "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/reset.vhd".
        clk_freq = 100000000
        rst_period = 10
    Found 10-bit register for signal <cnt>.
    Found 10-bit adder for signal <cnt[9]_GND_8_o_add_2_OUT> created at line 1241.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  10 D-type flip-flop(s).
Unit <reset> synthesized.

Synthesizing Unit <trigger_1>.
    Related source file is "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd".
        clk_freq = 100000000
        debounce = 10000
        signals = 1
    Found 2-bit register for signal <state<0>>.
    Found 1-bit register for signal <di_sampled>.
    Found 20-bit register for signal <cnt<0>>.
    Found finite state machine <FSM_0> for signal <state_0>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 6                                              |
    | Clock              | clk (rising_edge)                              |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 20-bit adder for signal <cnt[0][19]_GND_9_o_add_8_OUT> created at line 1241.
    Found 20-bit comparator greater for signal <cnt[0][19]_PWR_9_o_LessThan_8_o> created at line 106
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  21 D-type flip-flop(s).
	inferred   1 Comparator(s).
	inferred   4 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <trigger_1> synthesized.

Synthesizing Unit <timer>.
    Related source file is "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/timer.vhd".
        clk_freq = 100000000
        tmr_period = 500000
    Found 26-bit register for signal <cnt>.
    Found 26-bit adder for signal <cnt[25]_GND_12_o_add_2_OUT> created at line 1241.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  26 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <timer> synthesized.

Synthesizing Unit <trigger_2>.
    Related source file is "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/trigger.vhd".
        clk_freq = 100000000
        debounce = 10000
        signals = 16
    Found 2-bit register for signal <state<0>>.
    Found 2-bit register for signal <state<1>>.
    Found 2-bit register for signal <state<2>>.
    Found 2-bit register for signal <state<3>>.
    Found 2-bit register for signal <state<4>>.
    Found 2-bit register for signal <state<5>>.
    Found 2-bit register for signal <state<6>>.
    Found 2-bit register for signal <state<7>>.
    Found 2-bit register for signal <state<8>>.
    Found 2-bit register for signal <state<9>>.
    Found 2-bit register for signal <state<10>>.
    Found 2-bit register for signal <state<11>>.
    Found 2-bit register for signal <state<12>>.
    Found 2-bit register for signal <state<13>>.
    Found 2-bit register for signal <state<14>>.
    Found 2-bit register for signal <state<15>>.
    Found 20-bit register for signal <cnt<1>>.
    Found 20-bit register for signal <cnt<2>>.
    Found 20-bit register for signal <cnt<3>>.
    Found 20-bit register for signal <cnt<4>>.
    Found 20-bit register for signal <cnt<5>>.
    Found 20-bit register for signal <cnt<6>>.
    Found 20-bit register for signal <cnt<7>>.
    Found 20-bit register for signal <cnt<8>>.
    Found 20-bit register for signal <cnt<9>>.
    Found 20-bit register for signal <cnt<10>>.
    Found 20-bit register for signal <cnt<11>>.
    Found 20-bit register for signal <cnt<12>>.
    Found 20-bit register for signal <cnt<13>>.
    Found 20-bit register for signal <cnt<14>>.
    Found 20-bit register for signal <cnt<15>>.
    Found 20-bit register for signal <cnt<0>>.
    Found 1-bit register for signal <di_sampled<0>>.
    Found 1-bit register for signal <di_sampled<1>>.
    Found 1-bit register for signal <di_sampled<2>>.
    Found 1-bit register for signal <di_sampled<3>>.
    Found 1-bit register for signal <di_sampled<4>>.
    Found 1-bit register for signal <di_sampled<5>>.
    Found 1-bit register for signal <di_sampled<6>>.
    Found 1-bit register for signal <di_sampled<7>>.
    Found 1-bit register for signal <di_sampled<8>>.
    Found 1-bit register for signal <di_sampled<9>>.
    Found 1-bit register for signal <di_sampled<10>>.
    Found 1-bit register for signal <di_sampled<11>>.
    Found 1-bit register for signal <di_sampled<12>>.
    Found 1-bit register for signal <di_sampled<13>>.
    Found 1-bit register for signal <di_sampled<14>>.
    Found 1-bit register for signal <di_sampled<15>>.
    Found finite state machine <FSM_1> for signal <state_0>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_2> for signal <state_1>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_3> for signal <state_2>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_4> for signal <state_3>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_5> for signal <state_4>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_6> for signal <state_5>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_7> for signal <state_6>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_8> for signal <state_7>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_9> for signal <state_8>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_10> for signal <state_9>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_11> for signal <state_10>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_12> for signal <state_11>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_13> for signal <state_12>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_14> for signal <state_13>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_15> for signal <state_14>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_16> for signal <state_15>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 8                                              |
    | Inputs             | 2                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | st_low                                         |
    | Power Up State     | st_low                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 20-bit adder for signal <cnt[0][19]_GND_13_o_add_8_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[1][19]_GND_13_o_add_25_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[2][19]_GND_13_o_add_42_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[3][19]_GND_13_o_add_59_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[4][19]_GND_13_o_add_76_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[5][19]_GND_13_o_add_93_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[6][19]_GND_13_o_add_110_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[7][19]_GND_13_o_add_127_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[8][19]_GND_13_o_add_144_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[9][19]_GND_13_o_add_161_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[10][19]_GND_13_o_add_178_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[11][19]_GND_13_o_add_195_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[12][19]_GND_13_o_add_212_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[13][19]_GND_13_o_add_229_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[14][19]_GND_13_o_add_246_OUT> created at line 1241.
    Found 20-bit adder for signal <cnt[15][19]_GND_13_o_add_263_OUT> created at line 1241.
    Found 20-bit comparator greater for signal <cnt[0][19]_PWR_11_o_LessThan_8_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[1][19]_PWR_11_o_LessThan_25_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[2][19]_PWR_11_o_LessThan_42_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[3][19]_PWR_11_o_LessThan_59_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[4][19]_PWR_11_o_LessThan_76_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[5][19]_PWR_11_o_LessThan_93_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[6][19]_PWR_11_o_LessThan_110_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[7][19]_PWR_11_o_LessThan_127_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[8][19]_PWR_11_o_LessThan_144_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[9][19]_PWR_11_o_LessThan_161_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[10][19]_PWR_11_o_LessThan_178_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[11][19]_PWR_11_o_LessThan_195_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[12][19]_PWR_11_o_LessThan_212_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[13][19]_PWR_11_o_LessThan_229_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[14][19]_PWR_11_o_LessThan_246_o> created at line 106
    Found 20-bit comparator greater for signal <cnt[15][19]_PWR_11_o_LessThan_263_o> created at line 106
    Summary:
	inferred  16 Adder/Subtractor(s).
	inferred 336 D-type flip-flop(s).
	inferred  16 Comparator(s).
	inferred  64 Multiplexer(s).
	inferred  16 Finite State Machine(s).
Unit <trigger_2> synthesized.

Synthesizing Unit <ram>.
    Related source file is "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/ram.vhd".
        word_size = 32
        ram_size = 128
        file_name = "ram.dat"
    Found 128x32-bit dual-port RAM <Mram_data> for signal <data>.
    Found 32-bit register for signal <rdata>.
    Summary:
	inferred   1 RAM(s).
	inferred  32 D-type flip-flop(s).
Unit <ram> synthesized.

Synthesizing Unit <rom>.
    Related source file is "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/rom.vhd".
        word_size = 32
        rom_size = 64
        file_name = "rom.dat"
    Found 32-bit register for signal <do>.
    Found 64x32-bit Read Only RAM for signal <addr[5]_GND_16_o_wide_mux_0_OUT>
    Summary:
	inferred   1 RAM(s).
	inferred  32 D-type flip-flop(s).
Unit <rom> synthesized.

Synthesizing Unit <execution_unit>.
    Related source file is "/users/r/reedj/EE3DSA/dsa_cpu/2_part_cw/execution_unit.vhd".
        word_size = 32
        rom_size = 64
        ram_size = 128
        intr_size = 8
        ports_in = 2
        ports_out = 1
WARNING:Xst:647 - Input <ram_rdata<31:6>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <en> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 2-bit register for signal <curr_test_sr[1:0][1:0]>.
    Found 7-bit register for signal <curr_test_sp>.
    Found 8-bit register for signal <curr_interrupt_register>.
    Found 8-bit register for signal <curr_sample_io_out<0>>.
    Found 6-bit register for signal <curr_test_pc>.
    Found 1-bit register for signal <test_flag>.
    Found 7-bit adder for signal <ram_raddr> created at line 1241.
    Found 6-bit adder for signal <curr_test_pc[5]_GND_17_o_add_107_OUT> created at line 1241.
    Found 7-bit subtractor for signal <GND_17_o_GND_17_o_sub_100_OUT<6:0>> created at line 1308.
    WARNING:Xst:2404 -  FFs/Latches <curr_test_sr<31:2>> (without init value) have a constant value of 0 in block <execution_unit>.
    Summary:
	inferred   3 Adder/Subtractor(s).
	inferred  32 D-type flip-flop(s).
	inferred 167 Multiplexer(s).
Unit <execution_unit> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 2
 128x32-bit dual-port RAM                              : 1
 64x32-bit single-port Read Only RAM                   : 1
# Adders/Subtractors                                   : 22
 10-bit adder                                          : 1
 20-bit adder                                          : 17
 26-bit adder                                          : 1
 6-bit adder                                           : 1
 7-bit adder                                           : 1
 7-bit subtractor                                      : 1
# Registers                                            : 44
 1-bit register                                        : 18
 10-bit register                                       : 1
 2-bit register                                        : 1
 20-bit register                                       : 17
 26-bit register                                       : 1
 32-bit register                                       : 2
 6-bit register                                        : 1
 7-bit register                                        : 1
 8-bit register                                        : 2
# Comparators                                          : 17
 20-bit comparator greater                             : 17
# Multiplexers                                         : 236
 1-bit 2-to-1 multiplexer                              : 91
 2-bit 2-to-1 multiplexer                              : 1
 20-bit 2-to-1 multiplexer                             : 68
 26-bit 2-to-1 multiplexer                             : 1
 32-bit 2-to-1 multiplexer                             : 5
 6-bit 2-to-1 multiplexer                              : 50
 7-bit 2-to-1 multiplexer                              : 10
 8-bit 2-to-1 multiplexer                              : 10
# FSMs                                                 : 17
# Xors                                                 : 2
 8-bit xor2                                            : 2

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


Synthesizing (advanced) Unit <ram>.
INFO:Xst:3226 - The RAM <Mram_data> will be implemented as a BLOCK RAM, absorbing the following register(s): <rdata>
    -----------------------------------------------------------------------
    | ram_type           | Block                               |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 128-word x 32-bit                   |          |
    |     mode           | read-first                          |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to signal <wr>            | high     |
    |     addrA          | connected to signal <waddr>         |          |
    |     diA            | connected to signal <wdata>         |          |
    -----------------------------------------------------------------------
    | optimization       | speed                               |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 128-word x 32-bit                   |          |
    |     mode           | write-first                         |          |
    |     clkB           | connected to signal <clk>           | rise     |
    |     enB            | connected to signal <rd>            | high     |
    |     addrB          | connected to signal <raddr>         |          |
    |     doB            | connected to signal <rdata>         |          |
    -----------------------------------------------------------------------
    | optimization       | speed                               |          |
    -----------------------------------------------------------------------
Unit <ram> synthesized (advanced).

Synthesizing (advanced) Unit <reset>.
The following registers are absorbed into counter <cnt>: 1 register on signal <cnt>.
Unit <reset> synthesized (advanced).

Synthesizing (advanced) Unit <rom>.
INFO:Xst:3231 - The small RAM <Mram_addr[5]_GND_16_o_wide_mux_0_OUT> will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 64-word x 32-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <addr>          |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
Unit <rom> synthesized (advanced).

Synthesizing (advanced) Unit <timer>.
The following registers are absorbed into counter <cnt>: 1 register on signal <cnt>.
Unit <timer> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 2
 128x32-bit dual-port block RAM                        : 1
 64x32-bit single-port distributed Read Only RAM       : 1
# Adders/Subtractors                                   : 20
 20-bit adder                                          : 17
 6-bit adder                                           : 1
 7-bit adder                                           : 1
 7-bit subtractor                                      : 1
# Counters                                             : 2
 10-bit up counter                                     : 1
 26-bit up counter                                     : 1
# Registers                                            : 421
 Flip-Flops                                            : 421
# Comparators                                          : 17
 20-bit comparator greater                             : 17
# Multiplexers                                         : 235
 1-bit 2-to-1 multiplexer                              : 91
 2-bit 2-to-1 multiplexer                              : 1
 20-bit 2-to-1 multiplexer                             : 68
 32-bit 2-to-1 multiplexer                             : 5
 6-bit 2-to-1 multiplexer                              : 50
 7-bit 2-to-1 multiplexer                              : 10
 8-bit 2-to-1 multiplexer                              : 10
# FSMs                                                 : 17
# Xors                                                 : 2
 8-bit xor2                                            : 2

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <reset_debounce_unit/FSM_0> on signal <state_0[1:2]> with user encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 10
 st_falling_edge | 11
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_1> on signal <state_0[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_2> on signal <state_1[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_3> on signal <state_2[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_4> on signal <state_3[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_7> on signal <state_6[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_5> on signal <state_4[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_6> on signal <state_5[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_8> on signal <state_7[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_9> on signal <state_8[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_10> on signal <state_9[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_11> on signal <state_10[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_14> on signal <state_13[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_12> on signal <state_11[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_13> on signal <state_12[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_15> on signal <state_14[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <debounce_unit/FSM_16> on signal <state_15[1:2]> with gray encoding.
-----------------------------
 State           | Encoding
-----------------------------
 st_low          | 00
 st_rising_edge  | 01
 st_high         | 11
 st_falling_edge | 10
-----------------------------
WARNING:Xst:1293 - FF/Latch <do_17> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_18> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_19> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_20> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_21> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_22> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_23> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_28> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_29> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_30> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <do_31> has a constant value of 0 in block <rom>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1293 - FF/Latch <curr_interrupt_register_1> has a constant value of 0 in block <execution_unit>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <curr_interrupt_register_2> has a constant value of 0 in block <execution_unit>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <curr_interrupt_register_3> has a constant value of 0 in block <execution_unit>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <curr_interrupt_register_4> has a constant value of 0 in block <execution_unit>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <curr_interrupt_register_5> has a constant value of 0 in block <execution_unit>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <curr_interrupt_register_6> has a constant value of 0 in block <execution_unit>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <curr_interrupt_register_7> has a constant value of 0 in block <execution_unit>. This FF/Latch will be trimmed during the optimization process.

Optimizing unit <top_level> ...

Optimizing unit <trigger_1> ...

Optimizing unit <trigger_2> ...

Optimizing unit <rom> ...

Optimizing unit <execution_unit> ...
WARNING:Xst:1293 - FF/Latch <execution_unit/curr_interrupt_register_0> has a constant value of 0 in block <top_level>. This FF/Latch will be trimmed during the optimization process.
INFO:Xst:2261 - The FF/Latch <execution_unit/test_flag> in Unit <top_level> is equivalent to the following FF/Latch, which will be removed : <execution_unit/curr_test_sr_1> 

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 0) on block top_level, actual ratio is 13.
FlipFlop reset_debounce_unit/state_0_FSM_FFd2 has been replicated 1 time(s)

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 472
 Flip-Flops                                            : 472

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : top_level.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 1693
#      GND                         : 1
#      INV                         : 20
#      LUT1                        : 357
#      LUT2                        : 35
#      LUT3                        : 8
#      LUT4                        : 76
#      LUT5                        : 336
#      LUT6                        : 119
#      MUXCY                       : 357
#      MUXF7                       : 7
#      VCC                         : 1
#      XORCY                       : 376
# FlipFlops/Latches                : 472
#      FD                          : 24
#      FDC                         : 391
#      FDCE                        : 2
#      FDE                         : 31
#      FDP                         : 17
#      FDPE                        : 7
# RAMS                             : 1
#      RAMB16BWER                  : 1
# Clock Buffers                    : 1
#      BUFGP                       : 1
# IO Buffers                       : 37
#      IBUF                        : 16
#      OBUF                        : 21

Device utilization summary:
---------------------------

Selected Device : 6slx16csg324-3 


Slice Logic Utilization: 
 Number of Slice Registers:             472  out of  18224     2%  
 Number of Slice LUTs:                  951  out of   9112    10%  
    Number used as Logic:               951  out of   9112    10%  

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:    982
   Number with an unused Flip Flop:     510  out of    982    51%  
   Number with an unused LUT:            31  out of    982     3%  
   Number of fully used LUT-FF pairs:   441  out of    982    44%  
   Number of unique control sets:         7

IO Utilization: 
 Number of IOs:                          38
 Number of bonded IOBs:                  38  out of    232    16%  

Specific Feature Utilization:
 Number of Block RAM/FIFO:                1  out of     32     3%  
    Number using Block RAM only:          1
 Number of BUFG/BUFGCTRLs:                1  out of     16     6%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 473   |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -3

   Minimum period: 6.016ns (Maximum Frequency: 166.221MHz)
   Minimum input arrival time before clock: 2.211ns
   Maximum output required time after clock: 8.752ns
   Maximum combinational path delay: No path found

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 6.016ns (frequency: 166.221MHz)
  Total number of paths / destination ports: 27324 / 917
-------------------------------------------------------------------------
Delay:               6.016ns (Levels of Logic = 5)
  Source:            timer_unit/cnt_8 (FF)
  Destination:       rom_unit/do_27 (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: timer_unit/cnt_8 to rom_unit/do_27
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q              2   0.447   0.981  timer_unit/cnt_8 (timer_unit/cnt_8)
     LUT6:I0->O            4   0.203   0.931  timer_unit/tmr<25>4 (timer_unit/tmr<25>3)
     LUT6:I2->O            1   0.203   0.580  timer_unit/tmr<25>5_1 (timer_unit/tmr<25>5)
     LUT2:I1->O            8   0.205   0.803  execution_unit/Mmux_ram_wdata4311 (eu_ram_wdata<16>)
     LUT6:I5->O           18   0.205   1.154  execution_unit/Mmux_next_test_pc426 (eu_rom_addr<5>)
     LUT6:I4->O            1   0.203   0.000  rom_unit_Mram_addr[5]_GND_16_o_wide_mux_0_OUT17 (rom_unit/addr[5]_GND_16_o_wide_mux_0_OUT<0>)
     FDE:D                     0.102          rom_unit/do_0
    ----------------------------------------
    Total                      6.016ns (1.568ns logic, 4.448ns route)
                                       (26.1% logic, 73.9% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 19 / 17
-------------------------------------------------------------------------
Offset:              2.211ns (Levels of Logic = 2)
  Source:            msf (PAD)
  Destination:       debounce_unit/di_sampled_1 (FF)
  Destination Clock: clk rising

  Data Path: msf to debounce_unit/di_sampled_1
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O             1   1.222   0.684  msf_IBUF (msf_IBUF)
     LUT2:I0->O            1   0.203   0.000  db_data_in<1>1 (db_data_in<1>)
     FDC:D                     0.102          debounce_unit/di_sampled_1
    ----------------------------------------
    Total                      2.211ns (1.527ns logic, 0.684ns route)
                                       (69.1% logic, 30.9% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 280 / 8
-------------------------------------------------------------------------
Offset:              8.752ns (Levels of Logic = 6)
  Source:            timer_unit/cnt_8 (FF)
  Destination:       ld<7> (PAD)
  Source Clock:      clk rising

  Data Path: timer_unit/cnt_8 to ld<7>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q              2   0.447   0.981  timer_unit/cnt_8 (timer_unit/cnt_8)
     LUT6:I0->O            4   0.203   0.931  timer_unit/tmr<25>4 (timer_unit/tmr<25>3)
     LUT6:I2->O            1   0.203   0.580  timer_unit/tmr<25>5_1 (timer_unit/tmr<25>5)
     LUT2:I1->O            8   0.205   0.803  execution_unit/Mmux_ram_wdata4311 (eu_ram_wdata<16>)
     LUT6:I5->O            8   0.205   0.803  execution_unit/Mmux_internal_io_out<0>111 (execution_unit/Mmux_internal_io_out<0>11)
     LUT4:I3->O            2   0.205   0.616  execution_unit/Mmux_internal_io_out<0>81 (ld_7_OBUF)
     OBUF:I->O                 2.571          ld_7_OBUF (ld<7>)
    ----------------------------------------
    Total                      8.752ns (4.039ns logic, 4.713ns route)
                                       (46.1% logic, 53.9% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock clk
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |    6.016|         |         |         |
---------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 16.00 secs
Total CPU time to Xst completion: 15.30 secs
 
--> 


Total memory usage is 126604 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :   37 (   0 filtered)
Number of infos    :   11 (   0 filtered)

